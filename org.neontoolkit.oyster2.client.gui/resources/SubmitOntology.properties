adapter.file = Ontology_Type.submit.adapter.properties 
bundle.file = SubmitOntologyBundle
namespace = http://omv.ontoware.org/2005/05/ontology#
target.categories = general_attributes,provenance_attributes,applicability_attributes,format_attributes,availability_attributes,relationship_attributes,statistic_attributes
general_attributes.category.attributes = URI,name,acronym,description,documentation,notes,keywords,keyClasses,status,creationDate,modificationDate
URI.type = COMBO_TYPE
URI.required = true
URI.predefined = false
URI.source.type = booleans
name.type = LIST_AND_TEXT_TYPE
name.required = true
name.predefined = false
name.source.type = booleans
acronym.type = COMBO_TYPE
acronym.predefined = false
acronym.source.type = booleans
description.type = LONG_TEXT_TYPE
description.required = true
description.predefined = false
description.source.type = booleans
documentation.type = COMBO_TYPE
documentation.predefined = false
documentation.source.type = booleans
notes.type = LONG_TEXT_TYPE
notes.predefined = false
notes.source.type = booleans
keywords.type = LIST_AND_TEXT_TYPE
keywords.predefined = false
keywords.source.type = booleans
keyClasses.type = LIST_AND_TEXT_TYPE
keyClasses.predefined = false
keyClasses.source.type = booleans
status.type = COMBO_TYPE
status.editable = false
status.predefined = true
status.source.type = file
status.source = ontologyStatus.properties
creationDate.type = CALENDAR_TYPE
creationDate.editable = true
creationDate.validator = DateValidator
creationDate.required = true
creationDate.predefined = false
creationDate.source.type = booleans
modificationDate.type = CALENDAR_TYPE
modificationDate.editable = true
modificationDate.validator = DateValidator
modificationDate.predefined = false
modificationDate.source.type = booleans
provenance_attributes.category.attributes = hasContributor,hasCreator,usedOntologyEngineeringTool,usedOntologyEngineeringMethodology,usedKnowledgeRepresentationParadigm,endorsedBy
hasContributor.type = LIST_PARTY_TYPE
hasContributor.predefined = false
hasContributor.source.type = booleans
hasCreator.type = LIST_PARTY_TYPE
hasCreator.required = true
hasCreator.predefined = false
hasCreator.source.type = booleans
usedOntologyEngineeringTool.type = LIST_AND_TEXT_TYPE
usedOntologyEngineeringTool.predefined = false
usedOntologyEngineeringTool.source.type = booleans
usedOntologyEngineeringMethodology.type = LIST_AND_TEXT_TYPE
usedOntologyEngineeringMethodology.predefined = false
usedOntologyEngineeringMethodology.source.type = booleans
usedKnowledgeRepresentationParadigm.type = LIST_AND_TEXT_TYPE
usedKnowledgeRepresentationParadigm.predefined = true
usedKnowledgeRepresentationParadigm.source.type = ontology
usedKnowledgeRepresentationParadigm.class = http:\/\/omv.ontoware.org\/2005\/05\/ontology#KnowledgeRepresentationParadigm
endorsedBy.type = LIST_PARTY_TYPE
endorsedBy.predefined = false
endorsedBy.source.type = booleans
applicability_attributes.category.attributes = hasDomain,isOfType,naturalLanguage,designedForOntologyTask,hasFormalityLevel,knownUsage
hasDomain.type = LIST_DOMAIN_TYPE
hasDomain.predefined = false
hasDomain.source.type = booleans
isOfType.type = COMBO_TYPE
isOfType.required = true
isOfType.predefined = true
isOfType.source.type = ontology
isOfType.class = http:\/\/omv.ontoware.org\/2005\/05\/ontology#OntologyType
naturalLanguage.type = NATURAL_LANGUAGE_TYPE
naturalLanguage.editable = false
naturalLanguage.predefined = true
naturalLanguage.source.type = file
naturalLanguage.source = iso639.properties
designedForOntologyTask.type = LIST_AND_TEXT_TYPE
designedForOntologyTask.predefined = true
designedForOntologyTask.source.type = ontology
designedForOntologyTask.class = http:\/\/omv.ontoware.org\/2005\/05\/ontology#OntologyTask
hasFormalityLevel.type = COMBO_TYPE
hasFormalityLevel.predefined = true
hasFormalityLevel.source.type = ontology
hasFormalityLevel.class = http:\/\/omv.ontoware.org\/2005\/05\/ontology#FormalityLevel
knownUsage.type = LIST_AND_TEXT_TYPE
knownUsage.predefined = false
knownUsage.source.type = booleans
format_attributes.category.attributes = hasOntologyLanguage,hasOntologySyntax,isConsistentAccordingToReasoner,expressiveness
hasOntologyLanguage.type = COMBO_TYPE
hasOntologyLanguage.required = true
hasOntologyLanguage.predefined = true
hasOntologyLanguage.source.type = ontology
hasOntologyLanguage.class = http:\/\/omv.ontoware.org\/2005\/05\/ontology#OntologyLanguage
hasOntologySyntax.type = COMBO_TYPE
hasOntologySyntax.required = true
hasOntologySyntax.predefined = true
hasOntologySyntax.source.type = ontology
hasOntologySyntax.class = http:\/\/omv.ontoware.org\/2005\/05\/ontology#OntologySyntax
isConsistentAccordingToReasoner.type = COMBO_TYPE
isConsistentAccordingToReasoner.editable = false
isConsistentAccordingToReasoner.predefined = true
isConsistentAccordingToReasoner.source.type = booleans
expressiveness.type = COMBO_TYPE
expressiveness.predefined = false
expressiveness.source.type = booleans
availability_attributes.category.attributes = resourceLocator,version,hasLicense
resourceLocator.type = COMBO_TYPE
resourceLocator.required = true
resourceLocator.predefined = false
resourceLocator.source.type = booleans
version.type = COMBO_TYPE
version.required = true
version.predefined = false
version.source.type = booleans
hasLicense.type = COMBO_TYPE
hasLicense.predefined = true
hasLicense.source.type = ontology
hasLicense.class = http:\/\/omv.ontoware.org\/2005\/05\/ontology#LicenseModel
relationship_attributes.category.attributes = useImports,hasPriorVersion,isBackwardCompatibleWith,isIncompatibleWith
useImports.type = LIST_AND_TEXT_TYPE
useImports.predefined = false
useImports.source.type = booleans
hasPriorVersion.type = COMBO_TYPE
hasPriorVersion.validator = OntologyValidator
hasPriorVersion.predefined = false
hasPriorVersion.source.type = booleans
isBackwardCompatibleWith.type = LIST_AND_TEXT_TYPE
isBackwardCompatibleWith.predefined = false
isBackwardCompatibleWith.source.type = booleans
isIncompatibleWith.type = LIST_AND_TEXT_TYPE
isIncompatibleWith.predefined = false
isIncompatibleWith.source.type = booleans
statistic_attributes.category.attributes = containsTBox,containsRBox,containsABox,numberOfClasses,numberOfProperties,numberOfIndividuals,numberOfAxioms
containsTBox.type = COMBO_TYPE
containsTBox.editable = false
containsTBox.predefined = true
containsTBox.source.type = booleans
containsRBox.type = COMBO_TYPE
containsRBox.editable = false
containsRBox.predefined = true
containsRBox.source.type = booleans
containsABox.type = COMBO_TYPE
containsABox.editable = false
containsABox.predefined = true
containsABox.source.type = booleans
numberOfClasses.type = COMBO_TYPE
numberOfClasses.default = 0
numberOfClasses.required = true
numberOfClasses.predefined = false
numberOfClasses.source.type = booleans
numberOfProperties.type = COMBO_TYPE
numberOfProperties.default = 0
numberOfProperties.required = true
numberOfProperties.predefined = false
numberOfProperties.source.type = booleans
numberOfIndividuals.type = COMBO_TYPE
numberOfIndividuals.default = 0
numberOfIndividuals.required = true
numberOfIndividuals.predefined = false
numberOfIndividuals.source.type = booleans
numberOfAxioms.type = COMBO_TYPE
numberOfAxioms.default = 0
numberOfAxioms.required = true
numberOfAxioms.predefined = false
numberOfAxioms.source.type = booleans
